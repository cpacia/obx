// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.4
// source: transactions.proto

package transactions

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Transaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Data:
	//	*Transaction_StandardTransaction
	//	*Transaction_CoinbaseTransaction
	//	*Transaction_StakeTransaction
	Data isTransaction_Data `protobuf_oneof:"Data"`
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_transactions_proto_rawDescGZIP(), []int{0}
}

func (m *Transaction) GetData() isTransaction_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *Transaction) GetStandardTransaction() *StandardTransaction {
	if x, ok := x.GetData().(*Transaction_StandardTransaction); ok {
		return x.StandardTransaction
	}
	return nil
}

func (x *Transaction) GetCoinbaseTransaction() *CoinbaseTransaction {
	if x, ok := x.GetData().(*Transaction_CoinbaseTransaction); ok {
		return x.CoinbaseTransaction
	}
	return nil
}

func (x *Transaction) GetStakeTransaction() *StakeTransaction {
	if x, ok := x.GetData().(*Transaction_StakeTransaction); ok {
		return x.StakeTransaction
	}
	return nil
}

type isTransaction_Data interface {
	isTransaction_Data()
}

type Transaction_StandardTransaction struct {
	StandardTransaction *StandardTransaction `protobuf:"bytes,1,opt,name=standard_transaction,json=standardTransaction,proto3,oneof"`
}

type Transaction_CoinbaseTransaction struct {
	CoinbaseTransaction *CoinbaseTransaction `protobuf:"bytes,2,opt,name=coinbase_transaction,json=coinbaseTransaction,proto3,oneof"`
}

type Transaction_StakeTransaction struct {
	StakeTransaction *StakeTransaction `protobuf:"bytes,3,opt,name=stake_transaction,json=stakeTransaction,proto3,oneof"`
}

func (*Transaction_StandardTransaction) isTransaction_Data() {}

func (*Transaction_CoinbaseTransaction) isTransaction_Data() {}

func (*Transaction_StakeTransaction) isTransaction_Data() {}

type Output struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Commitment      []byte `protobuf:"bytes,1,opt,name=commitment,proto3" json:"commitment,omitempty"`
	EphemeralPubkey []byte `protobuf:"bytes,2,opt,name=ephemeral_pubkey,json=ephemeralPubkey,proto3" json:"ephemeral_pubkey,omitempty"`
	Ciphertext      []byte `protobuf:"bytes,3,opt,name=ciphertext,proto3" json:"ciphertext,omitempty"`
}

func (x *Output) Reset() {
	*x = Output{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Output) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Output) ProtoMessage() {}

func (x *Output) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Output.ProtoReflect.Descriptor instead.
func (*Output) Descriptor() ([]byte, []int) {
	return file_transactions_proto_rawDescGZIP(), []int{1}
}

func (x *Output) GetCommitment() []byte {
	if x != nil {
		return x.Commitment
	}
	return nil
}

func (x *Output) GetEphemeralPubkey() []byte {
	if x != nil {
		return x.EphemeralPubkey
	}
	return nil
}

func (x *Output) GetCiphertext() []byte {
	if x != nil {
		return x.Ciphertext
	}
	return nil
}

type StandardTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Outputs    []*Output `protobuf:"bytes,1,rep,name=outputs,proto3" json:"outputs,omitempty"`
	Fee        uint64    `protobuf:"varint,2,opt,name=fee,proto3" json:"fee,omitempty"`
	Nullifiers [][]byte  `protobuf:"bytes,3,rep,name=nullifiers,proto3" json:"nullifiers,omitempty"`
	Anchor     []byte    `protobuf:"bytes,4,opt,name=anchor,proto3" json:"anchor,omitempty"`
	Proof      []byte    `protobuf:"bytes,5,opt,name=proof,proto3" json:"proof,omitempty"`
}

func (x *StandardTransaction) Reset() {
	*x = StandardTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StandardTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StandardTransaction) ProtoMessage() {}

func (x *StandardTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StandardTransaction.ProtoReflect.Descriptor instead.
func (*StandardTransaction) Descriptor() ([]byte, []int) {
	return file_transactions_proto_rawDescGZIP(), []int{2}
}

func (x *StandardTransaction) GetOutputs() []*Output {
	if x != nil {
		return x.Outputs
	}
	return nil
}

func (x *StandardTransaction) GetFee() uint64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *StandardTransaction) GetNullifiers() [][]byte {
	if x != nil {
		return x.Nullifiers
	}
	return nil
}

func (x *StandardTransaction) GetAnchor() []byte {
	if x != nil {
		return x.Anchor
	}
	return nil
}

func (x *StandardTransaction) GetProof() []byte {
	if x != nil {
		return x.Proof
	}
	return nil
}

type CoinbaseTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Validator_ID []byte    `protobuf:"bytes,1,opt,name=validator_ID,json=validatorID,proto3" json:"validator_ID,omitempty"`
	NewCoins     uint64    `protobuf:"varint,2,opt,name=new_coins,json=newCoins,proto3" json:"new_coins,omitempty"`
	Outputs      []*Output `protobuf:"bytes,3,rep,name=outputs,proto3" json:"outputs,omitempty"`
	Signature    []byte    `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty"`
	Proof        []byte    `protobuf:"bytes,5,opt,name=proof,proto3" json:"proof,omitempty"`
}

func (x *CoinbaseTransaction) Reset() {
	*x = CoinbaseTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoinbaseTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinbaseTransaction) ProtoMessage() {}

func (x *CoinbaseTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinbaseTransaction.ProtoReflect.Descriptor instead.
func (*CoinbaseTransaction) Descriptor() ([]byte, []int) {
	return file_transactions_proto_rawDescGZIP(), []int{3}
}

func (x *CoinbaseTransaction) GetValidator_ID() []byte {
	if x != nil {
		return x.Validator_ID
	}
	return nil
}

func (x *CoinbaseTransaction) GetNewCoins() uint64 {
	if x != nil {
		return x.NewCoins
	}
	return 0
}

func (x *CoinbaseTransaction) GetOutputs() []*Output {
	if x != nil {
		return x.Outputs
	}
	return nil
}

func (x *CoinbaseTransaction) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *CoinbaseTransaction) GetProof() []byte {
	if x != nil {
		return x.Proof
	}
	return nil
}

type StakeTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Validator_ID []byte `protobuf:"bytes,1,opt,name=validator_ID,json=validatorID,proto3" json:"validator_ID,omitempty"`
	Amount       uint64 `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Nullifier    []byte `protobuf:"bytes,3,opt,name=nullifier,proto3" json:"nullifier,omitempty"`
	Signature    []byte `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty"`
	Proof        []byte `protobuf:"bytes,5,opt,name=proof,proto3" json:"proof,omitempty"`
}

func (x *StakeTransaction) Reset() {
	*x = StakeTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StakeTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StakeTransaction) ProtoMessage() {}

func (x *StakeTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StakeTransaction.ProtoReflect.Descriptor instead.
func (*StakeTransaction) Descriptor() ([]byte, []int) {
	return file_transactions_proto_rawDescGZIP(), []int{4}
}

func (x *StakeTransaction) GetValidator_ID() []byte {
	if x != nil {
		return x.Validator_ID
	}
	return nil
}

func (x *StakeTransaction) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *StakeTransaction) GetNullifier() []byte {
	if x != nil {
		return x.Nullifier
	}
	return nil
}

func (x *StakeTransaction) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *StakeTransaction) GetProof() []byte {
	if x != nil {
		return x.Proof
	}
	return nil
}

var File_transactions_proto protoreflect.FileDescriptor

var file_transactions_proto_rawDesc = []byte{
	0x0a, 0x12, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xed, 0x01, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x49, 0x0a, 0x14, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64,
	0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x13, 0x73, 0x74, 0x61, 0x6e,
	0x64, 0x61, 0x72, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x49, 0x0a, 0x14, 0x63, 0x6f, 0x69, 0x6e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x43, 0x6f, 0x69, 0x6e, 0x62, 0x61, 0x73, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x13, 0x63, 0x6f, 0x69, 0x6e, 0x62, 0x61, 0x73, 0x65, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x11, 0x73, 0x74,
	0x61, 0x6b, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x10, 0x73, 0x74, 0x61, 0x6b,
	0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x06, 0x0a, 0x04,
	0x44, 0x61, 0x74, 0x61, 0x22, 0x73, 0x0a, 0x06, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x29,
	0x0a, 0x10, 0x65, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x5f, 0x70, 0x75, 0x62, 0x6b,
	0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x65, 0x70, 0x68, 0x65, 0x6d, 0x65,
	0x72, 0x61, 0x6c, 0x50, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x69, 0x70,
	0x68, 0x65, 0x72, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x63,
	0x69, 0x70, 0x68, 0x65, 0x72, 0x74, 0x65, 0x78, 0x74, 0x22, 0x98, 0x01, 0x0a, 0x13, 0x53, 0x74,
	0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x21, 0x0a, 0x07, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x07, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x07, 0x6f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x75, 0x6c, 0x6c, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0a, 0x6e, 0x75, 0x6c, 0x6c,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x70,
	0x72, 0x6f, 0x6f, 0x66, 0x22, 0xac, 0x01, 0x0a, 0x13, 0x43, 0x6f, 0x69, 0x6e, 0x62, 0x61, 0x73,
	0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0b, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x12,
	0x1b, 0x0a, 0x09, 0x6e, 0x65, 0x77, 0x5f, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x6e, 0x65, 0x77, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x12, 0x21, 0x0a, 0x07,
	0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x07, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x70, 0x72,
	0x6f, 0x6f, 0x66, 0x22, 0x9f, 0x01, 0x0a, 0x10, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x75, 0x6c, 0x6c, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x6e, 0x75, 0x6c, 0x6c, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05,
	0x70, 0x72, 0x6f, 0x6f, 0x66, 0x42, 0x11, 0x5a, 0x0f, 0x2e, 0x2e, 0x2f, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_transactions_proto_rawDescOnce sync.Once
	file_transactions_proto_rawDescData = file_transactions_proto_rawDesc
)

func file_transactions_proto_rawDescGZIP() []byte {
	file_transactions_proto_rawDescOnce.Do(func() {
		file_transactions_proto_rawDescData = protoimpl.X.CompressGZIP(file_transactions_proto_rawDescData)
	})
	return file_transactions_proto_rawDescData
}

var file_transactions_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_transactions_proto_goTypes = []interface{}{
	(*Transaction)(nil),         // 0: Transaction
	(*Output)(nil),              // 1: Output
	(*StandardTransaction)(nil), // 2: StandardTransaction
	(*CoinbaseTransaction)(nil), // 3: CoinbaseTransaction
	(*StakeTransaction)(nil),    // 4: StakeTransaction
}
var file_transactions_proto_depIdxs = []int32{
	2, // 0: Transaction.standard_transaction:type_name -> StandardTransaction
	3, // 1: Transaction.coinbase_transaction:type_name -> CoinbaseTransaction
	4, // 2: Transaction.stake_transaction:type_name -> StakeTransaction
	1, // 3: StandardTransaction.outputs:type_name -> Output
	1, // 4: CoinbaseTransaction.outputs:type_name -> Output
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_transactions_proto_init() }
func file_transactions_proto_init() {
	if File_transactions_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_transactions_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Output); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StandardTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoinbaseTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StakeTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_transactions_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Transaction_StandardTransaction)(nil),
		(*Transaction_CoinbaseTransaction)(nil),
		(*Transaction_StakeTransaction)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_transactions_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_transactions_proto_goTypes,
		DependencyIndexes: file_transactions_proto_depIdxs,
		MessageInfos:      file_transactions_proto_msgTypes,
	}.Build()
	File_transactions_proto = out.File
	file_transactions_proto_rawDesc = nil
	file_transactions_proto_goTypes = nil
	file_transactions_proto_depIdxs = nil
}
